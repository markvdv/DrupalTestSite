<?php

/**
 * @file 
 * Use this module to learn about Drupal's menu system. 
 * Implementation of hook_menu(). 
 */
function menufun_menu() {
    $items['menufun'] = array(
        'title' => 'Greeting',
        'title callback' => 'menufun_title',
        'description' => 'A salutation.',
        'page callback' => 'menufun_greeting',
        'file' => 'menufun_greeting.inc',
        'page arguments' => array('Jane', 'Doe'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'weight' => -1
    );
    $items['menufun/farewell'] = array(
        'title' => 'Farewell',
        'page callback' => 'menufun_farewell',
        'file' => 'menufun_greeting.inc',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    return $items;
}

function menufun_hello($first_name = '', $last_name = '') {
    return t('Hello @first_name @last_name from @from_first_name @from_last_name', array('@first_name' => $first_name, '@last_name' => $last_name));
}

/**
 * Title callback. 
 */
function menufun_title() {
    drupal_set_title('The page title');
    $now = format_date(time());
    return t('It is now @time', array('@time' => $now));
}

/**
 * Implementation of hook_permission() 
 */
function menufun_permission() {
    return array(
        'receive greeting' => array(
            'title' => t('Receive a greeting'),
            'description' => t('Allow users receive a greeting message'),
        ),
    );
}

/**
 * Implementation of hook_menu_alter(). 
 * 
 * @param array $items 
 * Menu items keyed by path. 
 */
function menufun_menu_alter(&$items) {
// Replace the page callback to 'user_logout' with a call to 
// our own page callback. 
    $items['logout']['page callback'] = 'menufun_user_logout';
    $items['logout']['access callback'] = 'user_is_logged_in';
// Drupal no longer has to load the user.pages.inc file 
// since it will be calling our menufun_user_logout(), which 
// is in our module -- and that's already in scope. 
    unset($items['logout']['file']);
}

/**
 * Menu callback; logs the current user out, and redirects to drupal.org. 
 * This is a modified version of user_logout(). 
 */
function menufun_user_logout() {
    global $user;
    watchdog('menufun', 'Session closed for %name.', array('%name' => $user->name));
// Destroy the current session(Gets destroyed in the original user module): 
   // session_destroy();
// Run the 'logout' operation of the user hook so modules can respond 
// to the logout if they want to. 
    module_invoke_all('user', 'logout', NULL, $user);
// Load the anonymous user so the global $user object will be correct 
// on any hook_exit() implementations. 
    $user = drupal_anonymous_user();
    drupal_goto();
}

/**
 * Implements hook_menu_link_alter(). 
 * 
 * @param $item 
 * Associative array defining a menu link as passed into menu_link_save() 
 */
function menufun_menu_link_alter(&$item) {
    if ($item['link_path'] == 'user/logout') {
        $item['link_title'] = 'Sign off';
    }
}
